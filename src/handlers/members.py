from aiogram import Bot, Router, types
from aiogram.filters import IS_ADMIN, IS_MEMBER, IS_NOT_MEMBER, ChatMemberUpdatedFilter
from aiogram.utils.keyboard import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.formatting import Bold, Text, TextMention
from aiogram.exceptions import TelegramBadRequest
from utils import db
from utils.cleaner import cleaner


router_chat_member = Router()


@router_chat_member.chat_member(ChatMemberUpdatedFilter(IS_NOT_MEMBER >> IS_MEMBER))
async def new_member(event: types.ChatMemberUpdated, bot: Bot):
    result = await db.get_user_left_count(user_id=event.new_chat_member.user.id)
    site_name = "Rulate.ru"
    buttons = [
        [InlineKeyboardButton(text="–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –∂–º–∏ —Å—é–¥–∞ üòâ", url="t.me/Rulatemoder")],
        [InlineKeyboardButton(text="–ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞", url="t.me/rulated/628354")],
        [InlineKeyboardButton(text="–°—Ç–∏–∫–µ—Ä—ã –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞", url="t.me/addstickers/thomnuysticks")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    if result:
        text_message = Text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –¥–æ–º–æ–π, ",
            TextMention(event.new_chat_member.user.full_name, user=event.new_chat_member.user),
            "\n–í—ã –ø–æ–∫–∏–¥–∞–ª–∏ –Ω–∞—Å ", result[1], " —Ä–∞–∑, —Ä–∞–¥—ã —á—Ç–æ –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å."
        )
        hello_msg = await event.answer(
            **text_message.as_kwargs(),
            reply_markup=keyboard,
            disable_web_page_preview=True,
            disable_notification=True
        )
    else:
        text_message = Text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç ", Bold(site_name), ", ",
            TextMention(event.new_chat_member.user.full_name, user=event.new_chat_member.user),
            "\n–ó–¥–µ—Å—å –∞–≤—Ç–æ—Ä—ã, –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∏ –∏ —á–∏—Ç–∞—Ç–µ–ª–∏ –æ–±—â–∞—é—Ç—Å—è –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º, —Ç—ã —Ç–∞–∫–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –¥–∏—Å–∫—É—Å—Å–∏–∏."
        )
        hello_msg = await event.answer(
            **text_message.as_kwargs(),
            reply_markup=keyboard,
            disable_web_page_preview=True,
            disable_notification=True
        )

    await cleaner(bot=bot, chat_id=event.chat.id,messages=[hello_msg.message_id], timeout=60)


@router_chat_member.chat_member(ChatMemberUpdatedFilter(IS_MEMBER >> IS_NOT_MEMBER))
async def left_member(event: types.ChatMemberUpdated, bot: Bot):
    text_message = Text(
        "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å \"",
        Bold(event.old_chat_member.user.full_name),
        "\" –ø–æ–∫–∏–¥–∞–µ—Ç –Ω–∞—Å.",
    )
    msg = await event.answer(**text_message.as_kwargs(), disable_web_page_preview=True, disable_notification=True)
    await cleaner(bot=bot, chat_id=event.chat.id, messages=[msg.message_id], timeout=60)
